version: '3.5'
services:
  api:
    build: ./server

    env_file:
      - ./.env
    
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput --clear &&
        python manage.py runserver 0.0.0.0:8000
        "


    networks:
      - app-net
    volumes:
      - ./server:/home/server
      - static-vol:/home/server/static

    depends_on:
      - db
      

  frontend:
    build: ./client
    environment:
      - WDS_SOCKET_PORT=0
    networks:
      - app-net
    volumes:
      - ./client:/home/client


  db:
    image: postgres:latest
    networks:
      - app-net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env

  redis:
    image: redis:latest
    networks:
      - app-net

  celery_worker:
    build: ./server
    env_file:
      - ./.env
    command: > 
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput --clear &&
        celery -A apis worker -l info
        "
    volumes:
      - ./server:/home/server
    networks:
      - app-net
    depends_on:
      - db
      - redis
      - api
    
  celery_beat:
    build: ./server
    env_file:
      - ./.env
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput --clear &&
        celery -A apis beat -l info
        "
    volumes:
      - ./server:/home/server
    networks:
      - app-net
    depends_on:
      - db
      - redis
      - api

  nginx:
    build: ./nginx 
    networks:
      - app-net
    volumes:
      - static-vol:/var/www/project/static
    ports:
    - "80:80"
    - "443:443"
    depends_on:
      - api
      - frontend
  
  

networks:
  app-net:
volumes:
  static-vol:
  postgres_data:

